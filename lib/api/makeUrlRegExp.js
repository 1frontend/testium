// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var bothCases, encodedCharRE, isHexaAlphaRE, isRegExp, matchCharacter, matchURI, quoteRegExp;
  isRegExp = require('underscore').isRegExp;
  quoteRegExp = function (string) {
    return string.replace(/[-\\\/\[\]{}()*+?.^$|]/g, '\\$&');
  };
  bothCases = function (alpha) {
    var dn, up;
    up = alpha.toUpperCase();
    dn = alpha.toLowerCase();
    return '[' + up + dn + ']';
  };
  isHexaAlphaRE = /[a-f]/gi;
  matchCharacter = function (uriEncoded, hex) {
    var character, codepoint;
    uriEncoded = uriEncoded.replace(isHexaAlphaRE, bothCases);
    codepoint = parseInt(hex, 16);
    character = String.fromCharCode(codepoint);
    character = quoteRegExp(character);
    if (character === ' ')
      character += '|\\+';
    return '(?:' + uriEncoded + '|' + character + ')';
  };
  encodedCharRE = /%([0-9a-f]{2})/gi;
  matchURI = function (stringOrRegExp) {
    var fullyEncoded;
    if (isRegExp(stringOrRegExp))
      return stringOrRegExp.toString().replace(/^\/|\/\w*$/g, '');
    fullyEncoded = encodeURIComponent(stringOrRegExp);
    return quoteRegExp(fullyEncoded).replace(encodedCharRE, matchCharacter);
  };
  module.exports = function (url, query) {
    var key, val;
    if (null == query)
      query = {};
    url = matchURI(url);
    for (key in query) {
      if (!isOwn$(query, key))
        continue;
      val = query[key];
      key = matchURI(key);
      val = matchURI(val);
      url += '(?=(?:\\?|.*&)' + key + '=' + val + ')';
    }
    return new RegExp(url);
  };
  function isOwn$(o, p) {
    return {}.hasOwnProperty.call(o, p);
  }
}.call(this);
