// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var cropScreenshot, cropScreenshotBySelector, hasType;
  cropScreenshot = require('./img_diff').crop;
  hasType = require('assertive').hasType;
  cropScreenshotBySelector = function (driver, screenshot, selector) {
    var element, elementData, position, size;
    element = driver.getElement(selector);
    position = element.getLocationInView();
    size = element.getSize();
    elementData = {
      x: position.x,
      y: position.y,
      width: size.width,
      height: size.height
    };
    return cropScreenshot(screenshot, elementData);
  };
  module.exports = function (driver) {
    return {
      getPageTitle: function () {
        return driver.getPageTitle();
      },
      getPageSource: function () {
        return driver.getPageSource();
      },
      getScreenshot: function (selector) {
        var screenshot;
        if (null != selector) {
          hasType('getScreenshot(selector) - requires (String) selector or nothing', String, selector);
          screenshot = driver.getScreenshot();
          return cropScreenshotBySelector(driver, screenshot, selector);
        } else {
          return driver.getScreenshot();
        }
      },
      setPageSize: function (size) {
        var cache$, height, invocation, width;
        invocation = 'setPageSize(size={height, width})';
        hasType('' + invocation + ' - requires (Object) size', Object, size);
        cache$ = size;
        height = cache$.height;
        width = cache$.width;
        hasType('' + invocation + ' - requires (Number) size.height', Number, height);
        hasType('' + invocation + ' - requires (Number) size.width', Number, width);
        return driver.setPageSize({
          height: height,
          width: width
        });
      },
      getPageSize: function () {
        return driver.getPageSize();
      }
    };
  };
}.call(this);
