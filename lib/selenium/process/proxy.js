// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var path, port, PROXY_PORT, PROXY_TIMEOUT, spawn, spawnProcess;
  PROXY_PORT = 4445;
  PROXY_TIMEOUT = 1e3;
  path = require('path');
  spawn = require('./spawn');
  port = require('./port');
  spawnProcess = function (logStream, applicationPort) {
    var args, proxyPath;
    proxyPath = path.join(__dirname, '../../proxy/index.js');
    args = [
      proxyPath,
      applicationPort
    ];
    return spawn('node', args, 'testium proxy', logStream);
  };
  module.exports = function (applicationPort, logStream) {
    return function (parallelCallback) {
      var callback;
      callback = function (error, process) {
        return parallelCallback(null, {
          error: error,
          process: process
        });
      };
      logStream.log('Starting webdriver proxy');
      return port.isAvailable(PROXY_PORT, function (error, isAvailable) {
        var proxyProcess;
        if (null != error)
          return callback(error);
        if (!isAvailable)
          return callback(new Error('Port ' + PROXY_PORT + ' (requested by testium proxy) is already in use.'));
        proxyProcess = spawnProcess(logStream, applicationPort);
        logStream.log('waiting for webdriver proxy to listen on port ' + PROXY_PORT + ' and proxy to ' + applicationPort);
        return port.waitFor(proxyProcess, PROXY_PORT, PROXY_TIMEOUT, function (error, timedOut) {
          if (null != error)
            return callback(error);
          if (timedOut)
            return callback(new Error('Timeout occurred waiting for the testium proxy to be ready on port ' + PROXY_PORT + '. Check the log at: ' + logStream.path));
          logStream.log('webdriver proxy is ready!');
          return callback(null, proxyProcess);
        });
      });
    };
  };
}.call(this);
