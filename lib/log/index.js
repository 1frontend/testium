// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var createLog, DEFAULT_LOG_DIRECTORY, fs, logError, mkdirp;
  fs = require('fs');
  mkdirp = require('mkdirp');
  logError = require('./error');
  DEFAULT_LOG_DIRECTORY = '' + __dirname + '/../../log';
  createLog = function (path) {
    return fs.createWriteStream(path, {
      flags: 'w',
      encoding: 'utf-8'
    });
  };
  module.exports = function (logDirectory) {
    var log, logStream, stringifyBuffers, verboseLogStream;
    if (null == logDirectory)
      logDirectory = DEFAULT_LOG_DIRECTORY;
    mkdirp.sync(logDirectory);
    logStream = createLog('' + logDirectory + '/webdriver.log');
    verboseLogStream = createLog('' + logDirectory + '/webdriver-verbose.log');
    stringifyBuffers = function (key, value) {
      if (!(value instanceof Buffer))
        return value;
      return 'Buffer("' + value.toString() + '")';
    };
    log = function (message) {
      message = message + '\n';
      logStream.write(message);
      return verboseLogStream.write(message);
    };
    log.error = logError;
    log.response = function (response) {
      response = JSON.stringify(response, stringifyBuffers);
      verboseLogStream.write('----> ' + response);
      if (null != response.data ? response.data.length : void 0)
        verboseLogStream.write(response.data.toString());
      return verboseLogStream.write('\n');
    };
    log.flush = function (callback) {
      var oneDone;
      oneDone = false;
      logStream.end(function () {
        if (oneDone)
          return callback();
        return oneDone = true;
      });
      return verboseLogStream.end(function () {
        if (oneDone)
          return callback();
        return oneDone = true;
      });
    };
    return log;
  };
}.call(this);
