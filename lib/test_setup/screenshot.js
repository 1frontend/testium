// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var getComparisonMessage, getScreenshotData, getScreenshotMessage, writeFile;
  writeFile = require('./write_file');
  getComparisonMessage = function (images, title, screenshotDirectory) {
    var cache$, diff, image1, image2, message, path1, path2, pathDiff;
    cache$ = images;
    image1 = cache$.image1;
    image2 = cache$.image2;
    diff = cache$.diff;
    path1 = writeFile(screenshotDirectory, '' + title + '-compared1', image1);
    path2 = writeFile(screenshotDirectory, '' + title + '-compared2', image2);
    pathDiff = writeFile(screenshotDirectory, '' + title + '-diff', diff);
    message = '\n    Image 1 saved at: ' + path1;
    message += '\n    Image 2 saved at: ' + path2;
    message += '\n    Diff saved at: ' + pathDiff;
    return message;
  };
  getScreenshotMessage = function (driver, screen, screenshotDirectory, title) {
    var screenshotData, screenshotFile, screenshotMessage;
    screenshotData = getScreenshotData(driver, screen);
    if (!(null != screenshotData))
      return;
    screenshotFile = writeFile(screenshotDirectory, title, screenshotData, 'base64');
    screenshotMessage = '[TESTIUM] Saved screenshot ' + screenshotFile;
    return '\n    ' + screenshotMessage;
  };
  module.exports.takeScreenshotOnFailure = function (screenshotDirectory, test, driver) {
    var message, title;
    if (!screenshotDirectory)
      return;
    if (!((null != test ? test.state : void 0) === 'failed'))
      return;
    if (!(null != driver))
      return;
    title = test.title;
    message = null != test.err.compareImages ? getComparisonMessage(test.err.compareImages, title, screenshotDirectory) : getScreenshotMessage(driver, test.err.screen, screenshotDirectory, title);
    return test.err.message = '' + test.err.message + message;
  };
  getScreenshotData = function (driver, screen) {
    var error;
    if ('string' === typeof screen)
      return new Buffer(screen, 'base64');
    try {
      return driver.getScreenshot();
    } catch (e$) {
      error = e$;
      console.error('Error grabbing screenshot: ' + error.message);
      return;
    }
  };
}.call(this);
